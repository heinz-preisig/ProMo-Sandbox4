1 :: to =  Instantiate ( t , value )
2 :: te =  Instantiate ( t , value )
7 :: pi_A_alpha =  M_A_alpha . x
8 :: pi_A_beta =  M_A_beta . x
12 :: xo =  Instantiate ( x , value )
14 :: pi_A_alpha =  Instantiate ( pi_A_alpha , value )
15 :: pi_A_beta =  Instantiate ( pi_A_beta , value )
16 :: null =  Instantiate ( value , value )
17 :: one =  Instantiate ( value , value )
18 :: dx =  Instantiate ( dx , null )
19 :: pi_A_stack =  Stack ( pi_A_alpha , pi_A_beta )
22 :: K_B_gamma =  Instantiate ( inv ( t ) , value )
23 :: pi_B_gamma =  M_B_gamma . y
26 :: yo =  Instantiate ( y , value )
30 :: K_B_delta =  Instantiate ( inv ( t ) , value )
32 :: pi_B_delta =  M_B_delta . y
36 :: dy =  Instantiate ( dy , value )
40 :: K_A_alpha =  Instantiate ( inv ( t ) , value )
41 :: K_A_beta =  Instantiate ( inv ( t ) , value )
42 :: M_A_alpha =  Instantiate ( value , value )
43 :: M_A_beta =  Instantiate ( value , value )
44 :: pi_B_stack =  Stack ( pi_B_gamma , pi_B_delta )
50 :: fx_A_alpha =  F | A | ( K_A_alpha . F | N | pi_A_alpha )
51 :: fx_A_beta =  F | A | ( K_A_beta . F | N | pi_A_beta )
52 :: fy_B_gamma =  F | A | ( K_B_gamma . F | N | pi_B_gamma )
53 :: fy_B_delta =  F | A | ( K_B_delta . F | N | pi_B_delta )
54 :: fy_B_delta =  Instantiate ( fy_B_delta , value )
55 :: fx_A_alpha =  Instantiate ( fx_A_alpha , value )
57 :: fy_B_gamma =  Instantiate ( fy_B_gamma , value )
58 :: dx =  fx_A_alpha + fx_A_beta
59 :: dy =  fy_B_gamma + fy_B_delta
62 :: x =  Integral ( dx :: t in [ to , te ] ) + xo
63 :: y =  Integral ( dy :: t in [ to , te ] ) + yo
64 :: xy_stack =  MixedStack ( x , y )
66 :: fx_A_beta =  Instantiate ( fx_A_alpha , value )
