1 :: one =  Instantiate ( value , value )
2 :: null =  Instantiate ( value , value )
3 :: to =  Instantiate ( t , value )
4 :: te =  Instantiate ( t , value )
5 :: xo =  Instantiate ( x , value )
6 :: yo =  Instantiate ( y , value )
7 :: pi_A_alpha =  M_A_alpha . x
8 :: pi_A_beta =  M_A_beta . x
9 :: pi_B_gamma =  M_B_gamma . y
10 :: pi_B_delta =  M_B_delta . y
11 :: fx_A_alpha =  F | A | ( K_A_alpha . F | N | pi_A_alpha )
12 :: fx_A_beta =  F | A | ( K_A_beta . F | N | pi_A_beta )
14 :: fx_B_gamma =  F | A | ( K_B_gamma . F | N | pi_B_gamma )
15 :: fx_B_delta =  F | A | ( K_B_delta . F | N | pi_B_delta )
16 :: dx =  fx_A_alpha + fx_A_beta
17 :: dy =  fx_B_gamma + fx_B_delta
20 :: x =  Integral ( dx :: t in [ to , te ] ) + xo
21 :: y =  Integral ( dy :: t in [ to , te ] ) + yo
